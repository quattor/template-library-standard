#! /bin/bash

##H usage: backup_docker_data [-cont <DOCKERS_LIST>] [-dir <BACKUP DIR>] [-h] [-mailok <EMAIL>] [-mailerr <EMAIL>]  
##H
##H Options:
##H
##H -cont <DOCKERS_LIST> : comma separated list of the containers to be backupped. 
##H                        If not present the script will backup all the containers currently existing
##H
##H -dir <BACKUP DIR> : directory for the container backup. The default value is /backup.
##H
##H -mailok <EMAIL> : mail address to which should be sent the mails in case of success. If absent no mail will be sent.
##H
##H -mailerr <EMAIL>: mail address to which should be sent the mails in case of error. If absent no mail will be sent.
##H
##H -h   : prints this help
##H

CONTAINER="";
DIR="/backup";
EXIT_CODE=0;
DOCKER_BACKUP_OK="";
DOCKER_BACKUP_ERR="";

while [ $# -ge 1 ]; do
  case $1 in
    -cont ) CONTAINER=$2; shift ; shift ;;
    -dir ) DIR=$2; shift ; shift ;;
    -mailok ) DOCKER_BACKUP_OK=$2; shift ; shift ;;
    -mailerr ) DOCKER_BACKUP_ERR=$2; shift ; shift ;;
    -h ) grep '##H' $0|grep -v grep|cut -d 'H' -f 2-;exit 0;;
    -* ) echo "unrecognised option $1. Use -h for help" 1>&2; exit 5 ;;
    *  ) break ;;
  esac
done

if [ "x$CONTAINER" == "x" ];
then
     for container in $(docker ps --all 2>/dev/null|awk '{print $1}'|grep -v CONTAINER);
     do 
	 CONTAINER=$CONTAINER","$(docker inspect --format='{{.Name}}' $container 2>/dev/null|cut -d '/' -f 2);
     done
fi

if [ "x$CONTAINER" == "x" ];
then
    EXIT_CODE=2;
fi

for container in $(echo $CONTAINER|tr ',' ' ');
do
    volumes=$(docker inspect --format='{{range $p, $conf := .Volumes}} {{$p}}{{end}}' $container)

    docker run --rm --volumes-from $container -v $DIR:/backup debian tar cvf /backup/$container'.tar' $volumes

    if [ $? != 0 ];
    then
	EXIT_CODE=1;
    fi
done


if [ $EXIT_CODE == 0 ];
then
    if [ "x$DOCKER_BACKUP_OK" != "x" ];
    then
        echo "all in the subject"|mail -s 'Backup of dockers data OK' $DOCKER_BACKUP_OK
    fi
    echo 'Backup of dockers data OK'
    exit 0;
else
    if [ "x$DOCKER_BACKUP_ERR" != "x" ];
    then
        echo "all in the subject"|mail -s "Backup of dockers data Failed with code $EXIT_CODE" $DOCKER_BACKUP_ERR
    fi
    echo 'Backup of dockers data Failed'
    exit 1;
fi


